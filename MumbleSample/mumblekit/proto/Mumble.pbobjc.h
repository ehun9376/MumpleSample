// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: Mumble.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 40311
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 40311 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ACL_ChanACL;
@class ACL_ChanGroup;
@class BanList_BanEntry;
@class UserList_User;
@class UserStats_Stats;
@class Version;
@class VoiceTarget_Target;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Reject_RejectType

typedef GPB_ENUM(Reject_RejectType) {
  Reject_RejectType_None = 0,
  Reject_RejectType_WrongVersion = 1,
  Reject_RejectType_InvalidUsername = 2,
  Reject_RejectType_WrongUserPw = 3,
  Reject_RejectType_WrongServerPw = 4,
  Reject_RejectType_UsernameInUse = 5,
  Reject_RejectType_ServerFull = 6,
  Reject_RejectType_NoCertificate = 7,
};

GPBEnumDescriptor *Reject_RejectType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Reject_RejectType_IsValidValue(int32_t value);

#pragma mark - Enum PermissionDenied_DenyType

typedef GPB_ENUM(PermissionDenied_DenyType) {
  PermissionDenied_DenyType_Text = 0,
  PermissionDenied_DenyType_Permission = 1,
  PermissionDenied_DenyType_SuperUser = 2,
  PermissionDenied_DenyType_ChannelName = 3,
  PermissionDenied_DenyType_TextTooLong = 4,
  PermissionDenied_DenyType_H9K = 5,
  PermissionDenied_DenyType_TemporaryChannel = 6,
  PermissionDenied_DenyType_MissingCertificate = 7,
  PermissionDenied_DenyType_UserName = 8,
  PermissionDenied_DenyType_ChannelFull = 9,
};

GPBEnumDescriptor *PermissionDenied_DenyType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PermissionDenied_DenyType_IsValidValue(int32_t value);

#pragma mark - Enum ContextActionModify_Context

typedef GPB_ENUM(ContextActionModify_Context) {
  ContextActionModify_Context_Server = 1,
  ContextActionModify_Context_Channel = 2,
  ContextActionModify_Context_User = 4,
};

GPBEnumDescriptor *ContextActionModify_Context_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ContextActionModify_Context_IsValidValue(int32_t value);

#pragma mark - Enum ContextActionModify_Operation

typedef GPB_ENUM(ContextActionModify_Operation) {
  ContextActionModify_Operation_Add = 0,
  ContextActionModify_Operation_Remove = 1,
};

GPBEnumDescriptor *ContextActionModify_Operation_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ContextActionModify_Operation_IsValidValue(int32_t value);

#pragma mark - MumbleRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface MumbleRoot : GPBRootObject
@end

#pragma mark - Version

typedef GPB_ENUM(Version_FieldNumber) {
  Version_FieldNumber_Version = 1,
  Version_FieldNumber_Release_p = 2,
  Version_FieldNumber_Os = 3,
  Version_FieldNumber_OsVersion = 4,
};

GPB_FINAL @interface Version : GPBMessage

@property(nonatomic, readwrite) uint32_t version;
@property(nonatomic, readwrite) BOOL hasVersion;

@property(nonatomic, readwrite, copy, null_resettable) NSString *release_p;
/** Test to see if @c release_p has been set. */
@property(nonatomic, readwrite) BOOL hasRelease_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *os;
/** Test to see if @c os has been set. */
@property(nonatomic, readwrite) BOOL hasOs;

@property(nonatomic, readwrite, copy, null_resettable) NSString *osVersion;
/** Test to see if @c osVersion has been set. */
@property(nonatomic, readwrite) BOOL hasOsVersion;

@end

#pragma mark - UDPTunnel

typedef GPB_ENUM(UDPTunnel_FieldNumber) {
  UDPTunnel_FieldNumber_Packet = 1,
};

GPB_FINAL @interface UDPTunnel : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *packet;
/** Test to see if @c packet has been set. */
@property(nonatomic, readwrite) BOOL hasPacket;

@end

#pragma mark - Authenticate

typedef GPB_ENUM(Authenticate_FieldNumber) {
  Authenticate_FieldNumber_Username = 1,
  Authenticate_FieldNumber_Password = 2,
  Authenticate_FieldNumber_TokensArray = 3,
  Authenticate_FieldNumber_CeltVersionsArray = 4,
  Authenticate_FieldNumber_Opus = 5,
};

GPB_FINAL @interface Authenticate : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *username;
/** Test to see if @c username has been set. */
@property(nonatomic, readwrite) BOOL hasUsername;

@property(nonatomic, readwrite, copy, null_resettable) NSString *password;
/** Test to see if @c password has been set. */
@property(nonatomic, readwrite) BOOL hasPassword;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *tokensArray;
/** The number of items in @c tokensArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger tokensArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *celtVersionsArray;
/** The number of items in @c celtVersionsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger celtVersionsArray_Count;

@property(nonatomic, readwrite) BOOL opus;
@property(nonatomic, readwrite) BOOL hasOpus;

@end

#pragma mark - Ping

typedef GPB_ENUM(Ping_FieldNumber) {
  Ping_FieldNumber_Timestamp = 1,
  Ping_FieldNumber_Good = 2,
  Ping_FieldNumber_Late = 3,
  Ping_FieldNumber_Lost = 4,
  Ping_FieldNumber_Resync = 5,
  Ping_FieldNumber_UdpPackets = 6,
  Ping_FieldNumber_TcpPackets = 7,
  Ping_FieldNumber_UdpPingAvg = 8,
  Ping_FieldNumber_UdpPingVar = 9,
  Ping_FieldNumber_TcpPingAvg = 10,
  Ping_FieldNumber_TcpPingVar = 11,
};

GPB_FINAL @interface Ping : GPBMessage

@property(nonatomic, readwrite) uint64_t timestamp;
@property(nonatomic, readwrite) BOOL hasTimestamp;

@property(nonatomic, readwrite) uint32_t good;
@property(nonatomic, readwrite) BOOL hasGood;

@property(nonatomic, readwrite) uint32_t late;
@property(nonatomic, readwrite) BOOL hasLate;

@property(nonatomic, readwrite) uint32_t lost;
@property(nonatomic, readwrite) BOOL hasLost;

@property(nonatomic, readwrite) uint32_t resync;
@property(nonatomic, readwrite) BOOL hasResync;

@property(nonatomic, readwrite) uint32_t udpPackets;
@property(nonatomic, readwrite) BOOL hasUdpPackets;

@property(nonatomic, readwrite) uint32_t tcpPackets;
@property(nonatomic, readwrite) BOOL hasTcpPackets;

@property(nonatomic, readwrite) float udpPingAvg;
@property(nonatomic, readwrite) BOOL hasUdpPingAvg;

@property(nonatomic, readwrite) float udpPingVar;
@property(nonatomic, readwrite) BOOL hasUdpPingVar;

@property(nonatomic, readwrite) float tcpPingAvg;
@property(nonatomic, readwrite) BOOL hasTcpPingAvg;

@property(nonatomic, readwrite) float tcpPingVar;
@property(nonatomic, readwrite) BOOL hasTcpPingVar;

@end

#pragma mark - Reject

typedef GPB_ENUM(Reject_FieldNumber) {
  Reject_FieldNumber_Type = 1,
  Reject_FieldNumber_Reason = 2,
};

GPB_FINAL @interface Reject : GPBMessage

@property(nonatomic, readwrite) Reject_RejectType type;
@property(nonatomic, readwrite) BOOL hasType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *reason;
/** Test to see if @c reason has been set. */
@property(nonatomic, readwrite) BOOL hasReason;

@end

#pragma mark - ServerConfig

typedef GPB_ENUM(ServerConfig_FieldNumber) {
  ServerConfig_FieldNumber_MaxBandwidth = 1,
  ServerConfig_FieldNumber_WelcomeText = 2,
  ServerConfig_FieldNumber_AllowHtml = 3,
  ServerConfig_FieldNumber_MessageLength = 4,
  ServerConfig_FieldNumber_ImageMessageLength = 5,
};

GPB_FINAL @interface ServerConfig : GPBMessage

@property(nonatomic, readwrite) uint32_t maxBandwidth;
@property(nonatomic, readwrite) BOOL hasMaxBandwidth;

@property(nonatomic, readwrite, copy, null_resettable) NSString *welcomeText;
/** Test to see if @c welcomeText has been set. */
@property(nonatomic, readwrite) BOOL hasWelcomeText;

@property(nonatomic, readwrite) BOOL allowHtml;
@property(nonatomic, readwrite) BOOL hasAllowHtml;

@property(nonatomic, readwrite) uint32_t messageLength;
@property(nonatomic, readwrite) BOOL hasMessageLength;

@property(nonatomic, readwrite) uint32_t imageMessageLength;
@property(nonatomic, readwrite) BOOL hasImageMessageLength;

@end

#pragma mark - ServerSync

typedef GPB_ENUM(ServerSync_FieldNumber) {
  ServerSync_FieldNumber_Session = 1,
  ServerSync_FieldNumber_MaxBandwidth = 2,
  ServerSync_FieldNumber_WelcomeText = 3,
  ServerSync_FieldNumber_Permissions = 4,
};

GPB_FINAL @interface ServerSync : GPBMessage

@property(nonatomic, readwrite) uint32_t session;
@property(nonatomic, readwrite) BOOL hasSession;

@property(nonatomic, readwrite) uint32_t maxBandwidth;
@property(nonatomic, readwrite) BOOL hasMaxBandwidth;

@property(nonatomic, readwrite, copy, null_resettable) NSString *welcomeText;
/** Test to see if @c welcomeText has been set. */
@property(nonatomic, readwrite) BOOL hasWelcomeText;

@property(nonatomic, readwrite) uint64_t permissions;
@property(nonatomic, readwrite) BOOL hasPermissions;

@end

#pragma mark - ChannelRemove

typedef GPB_ENUM(ChannelRemove_FieldNumber) {
  ChannelRemove_FieldNumber_ChannelId = 1,
};

GPB_FINAL @interface ChannelRemove : GPBMessage

@property(nonatomic, readwrite) uint32_t channelId;
@property(nonatomic, readwrite) BOOL hasChannelId;

@end

#pragma mark - ChannelState

typedef GPB_ENUM(ChannelState_FieldNumber) {
  ChannelState_FieldNumber_ChannelId = 1,
  ChannelState_FieldNumber_Parent = 2,
  ChannelState_FieldNumber_Name = 3,
  ChannelState_FieldNumber_LinksArray = 4,
  ChannelState_FieldNumber_Description_p = 5,
  ChannelState_FieldNumber_LinksAddArray = 6,
  ChannelState_FieldNumber_LinksRemoveArray = 7,
  ChannelState_FieldNumber_Temporary = 8,
  ChannelState_FieldNumber_Position = 9,
  ChannelState_FieldNumber_DescriptionHash = 10,
};

GPB_FINAL @interface ChannelState : GPBMessage

@property(nonatomic, readwrite) uint32_t channelId;
@property(nonatomic, readwrite) BOOL hasChannelId;

@property(nonatomic, readwrite) uint32_t parent;
@property(nonatomic, readwrite) BOOL hasParent;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *linksArray;
/** The number of items in @c linksArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger linksArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;
/** Test to see if @c description_p has been set. */
@property(nonatomic, readwrite) BOOL hasDescription_p;

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *linksAddArray;
/** The number of items in @c linksAddArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger linksAddArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *linksRemoveArray;
/** The number of items in @c linksRemoveArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger linksRemoveArray_Count;

@property(nonatomic, readwrite) BOOL temporary;
@property(nonatomic, readwrite) BOOL hasTemporary;

@property(nonatomic, readwrite) int32_t position;
@property(nonatomic, readwrite) BOOL hasPosition;

@property(nonatomic, readwrite, copy, null_resettable) NSData *descriptionHash;
/** Test to see if @c descriptionHash has been set. */
@property(nonatomic, readwrite) BOOL hasDescriptionHash;

@end

#pragma mark - UserRemove

typedef GPB_ENUM(UserRemove_FieldNumber) {
  UserRemove_FieldNumber_Session = 1,
  UserRemove_FieldNumber_Actor = 2,
  UserRemove_FieldNumber_Reason = 3,
  UserRemove_FieldNumber_Ban = 4,
};

GPB_FINAL @interface UserRemove : GPBMessage

@property(nonatomic, readwrite) uint32_t session;
@property(nonatomic, readwrite) BOOL hasSession;

@property(nonatomic, readwrite) uint32_t actor;
@property(nonatomic, readwrite) BOOL hasActor;

@property(nonatomic, readwrite, copy, null_resettable) NSString *reason;
/** Test to see if @c reason has been set. */
@property(nonatomic, readwrite) BOOL hasReason;

@property(nonatomic, readwrite) BOOL ban;
@property(nonatomic, readwrite) BOOL hasBan;

@end

#pragma mark - UserState

typedef GPB_ENUM(UserState_FieldNumber) {
  UserState_FieldNumber_Session = 1,
  UserState_FieldNumber_Actor = 2,
  UserState_FieldNumber_Name = 3,
  UserState_FieldNumber_UserId = 4,
  UserState_FieldNumber_ChannelId = 5,
  UserState_FieldNumber_Mute = 6,
  UserState_FieldNumber_Deaf = 7,
  UserState_FieldNumber_Suppress = 8,
  UserState_FieldNumber_SelfMute = 9,
  UserState_FieldNumber_SelfDeaf = 10,
  UserState_FieldNumber_Texture = 11,
  UserState_FieldNumber_PluginContext = 12,
  UserState_FieldNumber_PluginIdentity = 13,
  UserState_FieldNumber_Comment = 14,
  UserState_FieldNumber_CertHash = 15,
  UserState_FieldNumber_CommentHash = 16,
  UserState_FieldNumber_TextureHash = 17,
  UserState_FieldNumber_PrioritySpeaker = 18,
  UserState_FieldNumber_Recording = 19,
};

GPB_FINAL @interface UserState : GPBMessage

@property(nonatomic, readwrite) uint32_t session;
@property(nonatomic, readwrite) BOOL hasSession;

@property(nonatomic, readwrite) uint32_t actor;
@property(nonatomic, readwrite) BOOL hasActor;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@property(nonatomic, readwrite) uint32_t userId;
@property(nonatomic, readwrite) BOOL hasUserId;

@property(nonatomic, readwrite) uint32_t channelId;
@property(nonatomic, readwrite) BOOL hasChannelId;

@property(nonatomic, readwrite) BOOL mute;
@property(nonatomic, readwrite) BOOL hasMute;

@property(nonatomic, readwrite) BOOL deaf;
@property(nonatomic, readwrite) BOOL hasDeaf;

@property(nonatomic, readwrite) BOOL suppress;
@property(nonatomic, readwrite) BOOL hasSuppress;

@property(nonatomic, readwrite) BOOL selfMute;
@property(nonatomic, readwrite) BOOL hasSelfMute;

@property(nonatomic, readwrite) BOOL selfDeaf;
@property(nonatomic, readwrite) BOOL hasSelfDeaf;

@property(nonatomic, readwrite, copy, null_resettable) NSData *texture;
/** Test to see if @c texture has been set. */
@property(nonatomic, readwrite) BOOL hasTexture;

@property(nonatomic, readwrite, copy, null_resettable) NSData *pluginContext;
/** Test to see if @c pluginContext has been set. */
@property(nonatomic, readwrite) BOOL hasPluginContext;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pluginIdentity;
/** Test to see if @c pluginIdentity has been set. */
@property(nonatomic, readwrite) BOOL hasPluginIdentity;

@property(nonatomic, readwrite, copy, null_resettable) NSString *comment;
/** Test to see if @c comment has been set. */
@property(nonatomic, readwrite) BOOL hasComment;

@property(nonatomic, readwrite, copy, null_resettable) NSString *certHash;
/** Test to see if @c certHash has been set. */
@property(nonatomic, readwrite) BOOL hasCertHash;

@property(nonatomic, readwrite, copy, null_resettable) NSData *commentHash;
/** Test to see if @c commentHash has been set. */
@property(nonatomic, readwrite) BOOL hasCommentHash;

@property(nonatomic, readwrite, copy, null_resettable) NSData *textureHash;
/** Test to see if @c textureHash has been set. */
@property(nonatomic, readwrite) BOOL hasTextureHash;

@property(nonatomic, readwrite) BOOL prioritySpeaker;
@property(nonatomic, readwrite) BOOL hasPrioritySpeaker;

@property(nonatomic, readwrite) BOOL recording;
@property(nonatomic, readwrite) BOOL hasRecording;

@end

#pragma mark - BanList

typedef GPB_ENUM(BanList_FieldNumber) {
  BanList_FieldNumber_BansArray = 1,
  BanList_FieldNumber_Query = 2,
};

GPB_FINAL @interface BanList : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<BanList_BanEntry*> *bansArray;
/** The number of items in @c bansArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger bansArray_Count;

@property(nonatomic, readwrite) BOOL query;
@property(nonatomic, readwrite) BOOL hasQuery;

@end

#pragma mark - BanList_BanEntry

typedef GPB_ENUM(BanList_BanEntry_FieldNumber) {
  BanList_BanEntry_FieldNumber_Address = 1,
  BanList_BanEntry_FieldNumber_Mask = 2,
  BanList_BanEntry_FieldNumber_Name = 3,
  BanList_BanEntry_FieldNumber_CertHash = 4,
  BanList_BanEntry_FieldNumber_Reason = 5,
  BanList_BanEntry_FieldNumber_Start = 6,
  BanList_BanEntry_FieldNumber_Duration = 7,
};

GPB_FINAL @interface BanList_BanEntry : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *address;
/** Test to see if @c address has been set. */
@property(nonatomic, readwrite) BOOL hasAddress;

@property(nonatomic, readwrite) uint32_t mask;
@property(nonatomic, readwrite) BOOL hasMask;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *certHash;
/** Test to see if @c certHash has been set. */
@property(nonatomic, readwrite) BOOL hasCertHash;

@property(nonatomic, readwrite, copy, null_resettable) NSString *reason;
/** Test to see if @c reason has been set. */
@property(nonatomic, readwrite) BOOL hasReason;

@property(nonatomic, readwrite, copy, null_resettable) NSString *start;
/** Test to see if @c start has been set. */
@property(nonatomic, readwrite) BOOL hasStart;

@property(nonatomic, readwrite) uint32_t duration;
@property(nonatomic, readwrite) BOOL hasDuration;

@end

#pragma mark - TextMessage

typedef GPB_ENUM(TextMessage_FieldNumber) {
  TextMessage_FieldNumber_Actor = 1,
  TextMessage_FieldNumber_SessionArray = 2,
  TextMessage_FieldNumber_ChannelIdArray = 3,
  TextMessage_FieldNumber_TreeIdArray = 4,
  TextMessage_FieldNumber_Message = 5,
};

GPB_FINAL @interface TextMessage : GPBMessage

@property(nonatomic, readwrite) uint32_t actor;
@property(nonatomic, readwrite) BOOL hasActor;

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *sessionArray;
/** The number of items in @c sessionArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger sessionArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *channelIdArray;
/** The number of items in @c channelIdArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger channelIdArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *treeIdArray;
/** The number of items in @c treeIdArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger treeIdArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@end

#pragma mark - PermissionDenied

typedef GPB_ENUM(PermissionDenied_FieldNumber) {
  PermissionDenied_FieldNumber_Permission = 1,
  PermissionDenied_FieldNumber_ChannelId = 2,
  PermissionDenied_FieldNumber_Session = 3,
  PermissionDenied_FieldNumber_Reason = 4,
  PermissionDenied_FieldNumber_Type = 5,
  PermissionDenied_FieldNumber_Name = 6,
};

GPB_FINAL @interface PermissionDenied : GPBMessage

@property(nonatomic, readwrite) uint32_t permission;
@property(nonatomic, readwrite) BOOL hasPermission;

@property(nonatomic, readwrite) uint32_t channelId;
@property(nonatomic, readwrite) BOOL hasChannelId;

@property(nonatomic, readwrite) uint32_t session;
@property(nonatomic, readwrite) BOOL hasSession;

@property(nonatomic, readwrite, copy, null_resettable) NSString *reason;
/** Test to see if @c reason has been set. */
@property(nonatomic, readwrite) BOOL hasReason;

@property(nonatomic, readwrite) PermissionDenied_DenyType type;
@property(nonatomic, readwrite) BOOL hasType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@end

#pragma mark - ACL

typedef GPB_ENUM(ACL_FieldNumber) {
  ACL_FieldNumber_ChannelId = 1,
  ACL_FieldNumber_InheritAcls = 2,
  ACL_FieldNumber_GroupsArray = 3,
  ACL_FieldNumber_AclsArray = 4,
  ACL_FieldNumber_Query = 5,
};

GPB_FINAL @interface ACL : GPBMessage

@property(nonatomic, readwrite) uint32_t channelId;
@property(nonatomic, readwrite) BOOL hasChannelId;

@property(nonatomic, readwrite) BOOL inheritAcls;
@property(nonatomic, readwrite) BOOL hasInheritAcls;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ACL_ChanGroup*> *groupsArray;
/** The number of items in @c groupsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger groupsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ACL_ChanACL*> *aclsArray;
/** The number of items in @c aclsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger aclsArray_Count;

@property(nonatomic, readwrite) BOOL query;
@property(nonatomic, readwrite) BOOL hasQuery;

@end

#pragma mark - ACL_ChanGroup

typedef GPB_ENUM(ACL_ChanGroup_FieldNumber) {
  ACL_ChanGroup_FieldNumber_Name = 1,
  ACL_ChanGroup_FieldNumber_Inherited = 2,
  ACL_ChanGroup_FieldNumber_Inherit = 3,
  ACL_ChanGroup_FieldNumber_Inheritable = 4,
  ACL_ChanGroup_FieldNumber_AddArray = 5,
  ACL_ChanGroup_FieldNumber_RemoveArray = 6,
  ACL_ChanGroup_FieldNumber_InheritedMembersArray = 7,
};

GPB_FINAL @interface ACL_ChanGroup : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@property(nonatomic, readwrite) BOOL inherited;
@property(nonatomic, readwrite) BOOL hasInherited;

@property(nonatomic, readwrite) BOOL inherit;
@property(nonatomic, readwrite) BOOL hasInherit;

@property(nonatomic, readwrite) BOOL inheritable;
@property(nonatomic, readwrite) BOOL hasInheritable;

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *addArray;
/** The number of items in @c addArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger addArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *removeArray;
/** The number of items in @c removeArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger removeArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *inheritedMembersArray;
/** The number of items in @c inheritedMembersArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger inheritedMembersArray_Count;

@end

#pragma mark - ACL_ChanACL

typedef GPB_ENUM(ACL_ChanACL_FieldNumber) {
  ACL_ChanACL_FieldNumber_ApplyHere = 1,
  ACL_ChanACL_FieldNumber_ApplySubs = 2,
  ACL_ChanACL_FieldNumber_Inherited = 3,
  ACL_ChanACL_FieldNumber_UserId = 4,
  ACL_ChanACL_FieldNumber_Group = 5,
  ACL_ChanACL_FieldNumber_Grant = 6,
  ACL_ChanACL_FieldNumber_Deny = 7,
};

GPB_FINAL @interface ACL_ChanACL : GPBMessage

@property(nonatomic, readwrite) BOOL applyHere;
@property(nonatomic, readwrite) BOOL hasApplyHere;

@property(nonatomic, readwrite) BOOL applySubs;
@property(nonatomic, readwrite) BOOL hasApplySubs;

@property(nonatomic, readwrite) BOOL inherited;
@property(nonatomic, readwrite) BOOL hasInherited;

@property(nonatomic, readwrite) uint32_t userId;
@property(nonatomic, readwrite) BOOL hasUserId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *group;
/** Test to see if @c group has been set. */
@property(nonatomic, readwrite) BOOL hasGroup;

@property(nonatomic, readwrite) uint32_t grant;
@property(nonatomic, readwrite) BOOL hasGrant;

@property(nonatomic, readwrite) uint32_t deny;
@property(nonatomic, readwrite) BOOL hasDeny;

@end

#pragma mark - QueryUsers

typedef GPB_ENUM(QueryUsers_FieldNumber) {
  QueryUsers_FieldNumber_IdsArray = 1,
  QueryUsers_FieldNumber_NamesArray = 2,
};

GPB_FINAL @interface QueryUsers : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *idsArray;
/** The number of items in @c idsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger idsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *namesArray;
/** The number of items in @c namesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger namesArray_Count;

@end

#pragma mark - CryptSetup

typedef GPB_ENUM(CryptSetup_FieldNumber) {
  CryptSetup_FieldNumber_Key = 1,
  CryptSetup_FieldNumber_ClientNonce = 2,
  CryptSetup_FieldNumber_ServerNonce = 3,
};

GPB_FINAL @interface CryptSetup : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *key;
/** Test to see if @c key has been set. */
@property(nonatomic, readwrite) BOOL hasKey;

@property(nonatomic, readwrite, copy, null_resettable) NSData *clientNonce;
/** Test to see if @c clientNonce has been set. */
@property(nonatomic, readwrite) BOOL hasClientNonce;

@property(nonatomic, readwrite, copy, null_resettable) NSData *serverNonce;
/** Test to see if @c serverNonce has been set. */
@property(nonatomic, readwrite) BOOL hasServerNonce;

@end

#pragma mark - ContextActionModify

typedef GPB_ENUM(ContextActionModify_FieldNumber) {
  ContextActionModify_FieldNumber_Action = 1,
  ContextActionModify_FieldNumber_Text = 2,
  ContextActionModify_FieldNumber_Context = 3,
  ContextActionModify_FieldNumber_Operation = 4,
};

GPB_FINAL @interface ContextActionModify : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *action;
/** Test to see if @c action has been set. */
@property(nonatomic, readwrite) BOOL hasAction;

@property(nonatomic, readwrite, copy, null_resettable) NSString *text;
/** Test to see if @c text has been set. */
@property(nonatomic, readwrite) BOOL hasText;

@property(nonatomic, readwrite) uint32_t context;
@property(nonatomic, readwrite) BOOL hasContext;

@property(nonatomic, readwrite) ContextActionModify_Operation operation;
@property(nonatomic, readwrite) BOOL hasOperation;

@end

#pragma mark - ContextAction

typedef GPB_ENUM(ContextAction_FieldNumber) {
  ContextAction_FieldNumber_Session = 1,
  ContextAction_FieldNumber_ChannelId = 2,
  ContextAction_FieldNumber_Action = 3,
};

GPB_FINAL @interface ContextAction : GPBMessage

@property(nonatomic, readwrite) uint32_t session;
@property(nonatomic, readwrite) BOOL hasSession;

@property(nonatomic, readwrite) uint32_t channelId;
@property(nonatomic, readwrite) BOOL hasChannelId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *action;
/** Test to see if @c action has been set. */
@property(nonatomic, readwrite) BOOL hasAction;

@end

#pragma mark - UserList

typedef GPB_ENUM(UserList_FieldNumber) {
  UserList_FieldNumber_UsersArray = 1,
};

GPB_FINAL @interface UserList : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserList_User*> *usersArray;
/** The number of items in @c usersArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger usersArray_Count;

@end

#pragma mark - UserList_User

typedef GPB_ENUM(UserList_User_FieldNumber) {
  UserList_User_FieldNumber_UserId = 1,
  UserList_User_FieldNumber_Name = 2,
};

GPB_FINAL @interface UserList_User : GPBMessage

@property(nonatomic, readwrite) uint32_t userId;
@property(nonatomic, readwrite) BOOL hasUserId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@end

#pragma mark - VoiceTarget

typedef GPB_ENUM(VoiceTarget_FieldNumber) {
  VoiceTarget_FieldNumber_Id_p = 1,
  VoiceTarget_FieldNumber_TargetsArray = 2,
};

GPB_FINAL @interface VoiceTarget : GPBMessage

@property(nonatomic, readwrite) uint32_t id_p;
@property(nonatomic, readwrite) BOOL hasId_p;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<VoiceTarget_Target*> *targetsArray;
/** The number of items in @c targetsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger targetsArray_Count;

@end

#pragma mark - VoiceTarget_Target

typedef GPB_ENUM(VoiceTarget_Target_FieldNumber) {
  VoiceTarget_Target_FieldNumber_SessionArray = 1,
  VoiceTarget_Target_FieldNumber_ChannelId = 2,
  VoiceTarget_Target_FieldNumber_Group = 3,
  VoiceTarget_Target_FieldNumber_Links = 4,
  VoiceTarget_Target_FieldNumber_Children = 5,
};

GPB_FINAL @interface VoiceTarget_Target : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *sessionArray;
/** The number of items in @c sessionArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger sessionArray_Count;

@property(nonatomic, readwrite) uint32_t channelId;
@property(nonatomic, readwrite) BOOL hasChannelId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *group;
/** Test to see if @c group has been set. */
@property(nonatomic, readwrite) BOOL hasGroup;

@property(nonatomic, readwrite) BOOL links;
@property(nonatomic, readwrite) BOOL hasLinks;

@property(nonatomic, readwrite) BOOL children;
@property(nonatomic, readwrite) BOOL hasChildren;

@end

#pragma mark - PermissionQuery

typedef GPB_ENUM(PermissionQuery_FieldNumber) {
  PermissionQuery_FieldNumber_ChannelId = 1,
  PermissionQuery_FieldNumber_Permissions = 2,
  PermissionQuery_FieldNumber_Flush = 3,
};

GPB_FINAL @interface PermissionQuery : GPBMessage

@property(nonatomic, readwrite) uint32_t channelId;
@property(nonatomic, readwrite) BOOL hasChannelId;

@property(nonatomic, readwrite) uint32_t permissions;
@property(nonatomic, readwrite) BOOL hasPermissions;

@property(nonatomic, readwrite) BOOL flush;
@property(nonatomic, readwrite) BOOL hasFlush;

@end

#pragma mark - CodecVersion

typedef GPB_ENUM(CodecVersion_FieldNumber) {
  CodecVersion_FieldNumber_Alpha = 1,
  CodecVersion_FieldNumber_Beta = 2,
  CodecVersion_FieldNumber_PreferAlpha = 3,
  CodecVersion_FieldNumber_Opus = 4,
};

GPB_FINAL @interface CodecVersion : GPBMessage

@property(nonatomic, readwrite) int32_t alpha;
@property(nonatomic, readwrite) BOOL hasAlpha;

@property(nonatomic, readwrite) int32_t beta;
@property(nonatomic, readwrite) BOOL hasBeta;

@property(nonatomic, readwrite) BOOL preferAlpha;
@property(nonatomic, readwrite) BOOL hasPreferAlpha;

@property(nonatomic, readwrite) BOOL opus;
@property(nonatomic, readwrite) BOOL hasOpus;

@end

#pragma mark - UserStats

typedef GPB_ENUM(UserStats_FieldNumber) {
  UserStats_FieldNumber_Session = 1,
  UserStats_FieldNumber_StatsOnly = 2,
  UserStats_FieldNumber_CertificatesArray = 3,
  UserStats_FieldNumber_FromClient = 4,
  UserStats_FieldNumber_FromServer = 5,
  UserStats_FieldNumber_UdpPackets = 6,
  UserStats_FieldNumber_TcpPackets = 7,
  UserStats_FieldNumber_UdpPingAvg = 8,
  UserStats_FieldNumber_UdpPingVar = 9,
  UserStats_FieldNumber_TcpPingAvg = 10,
  UserStats_FieldNumber_TcpPingVar = 11,
  UserStats_FieldNumber_Version = 12,
  UserStats_FieldNumber_CeltVersionsArray = 13,
  UserStats_FieldNumber_Address = 14,
  UserStats_FieldNumber_Bandwidth = 15,
  UserStats_FieldNumber_Onlinesecs = 16,
  UserStats_FieldNumber_Idlesecs = 17,
  UserStats_FieldNumber_StrongCertificate = 18,
  UserStats_FieldNumber_Opus = 19,
};

GPB_FINAL @interface UserStats : GPBMessage

@property(nonatomic, readwrite) uint32_t session;
@property(nonatomic, readwrite) BOOL hasSession;

@property(nonatomic, readwrite) BOOL statsOnly;
@property(nonatomic, readwrite) BOOL hasStatsOnly;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *certificatesArray;
/** The number of items in @c certificatesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger certificatesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) UserStats_Stats *fromClient;
/** Test to see if @c fromClient has been set. */
@property(nonatomic, readwrite) BOOL hasFromClient;

@property(nonatomic, readwrite, strong, null_resettable) UserStats_Stats *fromServer;
/** Test to see if @c fromServer has been set. */
@property(nonatomic, readwrite) BOOL hasFromServer;

@property(nonatomic, readwrite) uint32_t udpPackets;
@property(nonatomic, readwrite) BOOL hasUdpPackets;

@property(nonatomic, readwrite) uint32_t tcpPackets;
@property(nonatomic, readwrite) BOOL hasTcpPackets;

@property(nonatomic, readwrite) float udpPingAvg;
@property(nonatomic, readwrite) BOOL hasUdpPingAvg;

@property(nonatomic, readwrite) float udpPingVar;
@property(nonatomic, readwrite) BOOL hasUdpPingVar;

@property(nonatomic, readwrite) float tcpPingAvg;
@property(nonatomic, readwrite) BOOL hasTcpPingAvg;

@property(nonatomic, readwrite) float tcpPingVar;
@property(nonatomic, readwrite) BOOL hasTcpPingVar;

@property(nonatomic, readwrite, strong, null_resettable) Version *version;
/** Test to see if @c version has been set. */
@property(nonatomic, readwrite) BOOL hasVersion;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *celtVersionsArray;
/** The number of items in @c celtVersionsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger celtVersionsArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSData *address;
/** Test to see if @c address has been set. */
@property(nonatomic, readwrite) BOOL hasAddress;

@property(nonatomic, readwrite) uint32_t bandwidth;
@property(nonatomic, readwrite) BOOL hasBandwidth;

@property(nonatomic, readwrite) uint32_t onlinesecs;
@property(nonatomic, readwrite) BOOL hasOnlinesecs;

@property(nonatomic, readwrite) uint32_t idlesecs;
@property(nonatomic, readwrite) BOOL hasIdlesecs;

@property(nonatomic, readwrite) BOOL strongCertificate;
@property(nonatomic, readwrite) BOOL hasStrongCertificate;

@property(nonatomic, readwrite) BOOL opus;
@property(nonatomic, readwrite) BOOL hasOpus;

@end

#pragma mark - UserStats_Stats

typedef GPB_ENUM(UserStats_Stats_FieldNumber) {
  UserStats_Stats_FieldNumber_Good = 1,
  UserStats_Stats_FieldNumber_Late = 2,
  UserStats_Stats_FieldNumber_Lost = 3,
  UserStats_Stats_FieldNumber_Resync = 4,
};

GPB_FINAL @interface UserStats_Stats : GPBMessage

@property(nonatomic, readwrite) uint32_t good;
@property(nonatomic, readwrite) BOOL hasGood;

@property(nonatomic, readwrite) uint32_t late;
@property(nonatomic, readwrite) BOOL hasLate;

@property(nonatomic, readwrite) uint32_t lost;
@property(nonatomic, readwrite) BOOL hasLost;

@property(nonatomic, readwrite) uint32_t resync;
@property(nonatomic, readwrite) BOOL hasResync;

@end

#pragma mark - SuggestConfig

typedef GPB_ENUM(SuggestConfig_FieldNumber) {
  SuggestConfig_FieldNumber_Version = 1,
  SuggestConfig_FieldNumber_Positional = 2,
  SuggestConfig_FieldNumber_PushToTalk = 3,
};

GPB_FINAL @interface SuggestConfig : GPBMessage

@property(nonatomic, readwrite) uint32_t version;
@property(nonatomic, readwrite) BOOL hasVersion;

@property(nonatomic, readwrite) BOOL positional;
@property(nonatomic, readwrite) BOOL hasPositional;

@property(nonatomic, readwrite) BOOL pushToTalk;
@property(nonatomic, readwrite) BOOL hasPushToTalk;

@end

#pragma mark - RequestBlob

typedef GPB_ENUM(RequestBlob_FieldNumber) {
  RequestBlob_FieldNumber_SessionTextureArray = 1,
  RequestBlob_FieldNumber_SessionCommentArray = 2,
  RequestBlob_FieldNumber_ChannelDescriptionArray = 3,
};

GPB_FINAL @interface RequestBlob : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *sessionTextureArray;
/** The number of items in @c sessionTextureArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger sessionTextureArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *sessionCommentArray;
/** The number of items in @c sessionCommentArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger sessionCommentArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *channelDescriptionArray;
/** The number of items in @c channelDescriptionArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger channelDescriptionArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
